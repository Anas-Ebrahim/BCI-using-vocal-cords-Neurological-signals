Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./DIO_Prog.o (__do_copy_data)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
LOAD ./ADC_Prog.o
LOAD ./DIO_Prog.o
LOAD ./UART_Prog.o
LOAD ./main.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x64e
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000076        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x0000007e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x0000007e                __vector_1
                0x0000007e                __vector_12
                0x0000007e                __bad_interrupt
                0x0000007e                __vector_6
                0x0000007e                __vector_3
                0x0000007e                __vector_11
                0x0000007e                __vector_13
                0x0000007e                __vector_17
                0x0000007e                __vector_19
                0x0000007e                __vector_7
                0x0000007e                __vector_5
                0x0000007e                __vector_4
                0x0000007e                __vector_9
                0x0000007e                __vector_2
                0x0000007e                __vector_15
                0x0000007e                __vector_8
                0x0000007e                __vector_14
                0x0000007e                __vector_10
                0x0000007e                __vector_16
                0x0000007e                __vector_18
                0x0000007e                __vector_20
 .text          0x00000082        0x0 ./ADC_Prog.o
 .text          0x00000082        0x0 ./DIO_Prog.o
 .text          0x00000082        0x0 ./UART_Prog.o
 .text          0x00000082        0x0 ./main.o
 .text          0x00000082        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000082        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000082                . = ALIGN (0x2)
 *(.text.*)
 .text.ADC_VoidInit
                0x00000082       0x22 ./ADC_Prog.o
                0x00000082                ADC_VoidInit
 .text.ADC_VoidEnable
                0x000000a4       0x18 ./ADC_Prog.o
                0x000000a4                ADC_VoidEnable
 .text.ADC_VoidDisable
                0x000000bc       0x18 ./ADC_Prog.o
                0x000000bc                ADC_VoidDisable
 .text.ADC_u16ReadChannel
                0x000000d4       0x78 ./ADC_Prog.o
                0x000000d4                ADC_u16ReadChannel
 .text.DIO_VoidInit
                0x0000014c       0x5a ./DIO_Prog.o
                0x0000014c                DIO_VoidInit
 .text.DIO_u8ReadPinVal
                0x000001a6       0x96 ./DIO_Prog.o
                0x000001a6                DIO_u8ReadPinVal
 .text.DIO_u8WritePinVal
                0x0000023c       0xde ./DIO_Prog.o
                0x0000023c                DIO_u8WritePinVal
 .text.DIO_u8ReadPortVal
                0x0000031a       0x4e ./DIO_Prog.o
                0x0000031a                DIO_u8ReadPortVal
 .text.DIO_u8WritePortVal
                0x00000368       0x4c ./DIO_Prog.o
                0x00000368                DIO_u8WritePortVal
 .text.DIO_u8WritePinDir
                0x000003b4       0xa2 ./DIO_Prog.o
                0x000003b4                DIO_u8WritePinDir
 .text.DIO_u8WritePortDir
                0x00000456       0x42 ./DIO_Prog.o
                0x00000456                DIO_u8WritePortDir
 .text.DIO_u8ReadPinDir
                0x00000498       0x92 ./DIO_Prog.o
                0x00000498                DIO_u8ReadPinDir
 .text.DIO_u8ReadPortDir
                0x0000052a       0x4e ./DIO_Prog.o
                0x0000052a                DIO_u8ReadPortDir
 .text.UART_voidInit
                0x00000578       0x2c ./UART_Prog.o
                0x00000578                UART_voidInit
 .text.UART_voidTransmit
                0x000005a4       0x2e ./UART_Prog.o
                0x000005a4                UART_voidTransmit
 .text.UART_voidSendFromArrayWithNullCh
                0x000005d2       0x3a ./UART_Prog.o
                0x000005d2                UART_voidSendFromArrayWithNullCh
 .text.UART_u8Receive
                0x0000060c       0x1e ./UART_Prog.o
                0x0000060c                UART_u8Receive
 .text.main     0x0000062a       0x20 ./main.o
                0x0000062a                main
 .text.libgcc   0x0000064a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x0000064a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x0000064a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000064a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x0000064a                exit
                0x0000064a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000064a        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x0000064e                _etext = .

.data           0x00800060       0x18 load address 0x0000064e
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 ./ADC_Prog.o
 .data          0x00800060        0x0 ./DIO_Prog.o
 .data          0x00800060        0x0 ./UART_Prog.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.DIO_u8ArrPORT
                0x00800060        0x8 ./DIO_Prog.o
                0x00800060                DIO_u8ArrPORT
 .rodata.DIO_u8ArrDDR
                0x00800068        0x8 ./DIO_Prog.o
                0x00800068                DIO_u8ArrDDR
 .rodata.DIO_u8ArrPIN
                0x00800070        0x8 ./DIO_Prog.o
                0x00800070                DIO_u8ArrPIN
 *(.gnu.linkonce.d*)
                0x00800078                . = ALIGN (0x2)
                0x00800078                _edata = .
                0x00800078                PROVIDE (__data_end, .)

.bss            0x00800078        0x0
                0x00800078                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800078        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .bss           0x00800078        0x0 ./ADC_Prog.o
 .bss           0x00800078        0x0 ./DIO_Prog.o
 .bss           0x00800078        0x0 ./UART_Prog.o
 .bss           0x00800078        0x0 ./main.o
 .bss           0x00800078        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800078        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 *(.bss*)
 *(COMMON)
                0x00800078                PROVIDE (__bss_end, .)
                0x0000064e                __data_load_start = LOADADDR (.data)
                0x00000666                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800078        0x0
                0x00800078                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800078                PROVIDE (__noinit_end, .)
                0x00800078                _end = .
                0x00800078                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xdec
 *(.stab)
 .stab          0x00000000      0x300 ./ADC_Prog.o
 .stab          0x00000300      0x720 ./DIO_Prog.o
                                0x7b0 (size before relaxing)
 .stab          0x00000a20      0x2a0 ./UART_Prog.o
                                0x2ac (size before relaxing)
 .stab          0x00000cc0      0x12c ./main.o
                                0x1bc (size before relaxing)

.stabstr        0x00000000      0x8b8
 *(.stabstr)
 .stabstr       0x00000000      0x8b8 ./ADC_Prog.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(UART_ADC.elf elf32-avr)
LOAD linker stubs
